{"version":3,"file":"static/js/493.e1ff2a6b.chunk.js","mappings":"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","sources":["pages/Cast.jsx","service/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'service/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCastData = async () => {\n      try {\n        const castData = await getCast(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    getCastData();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast.map(({ id, name, profile_path, character }) => {\n        const imgSrc = `https://image.tmdb.org/t/p/w500${profile_path}`;\n        return (\n          <li key={id}>\n            {profile_path !== null && (\n              <img src={imgSrc} alt={name} width=\"120\" />\n            )}\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n// 8c1d02b978dbff183fcda89eac0b3f2e\n// https://api.themoviedb.org /3/trending/movie/ {time_window}\n// const API_KEY = '8c1d02b978dbff183fcda89eac0b3f2e';\n// const BEARER =\n//   'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4YzFkMDJiOTc4ZGJmZjE4M2ZjZGE4OWVhYzBiM2YyZSIsInN1YiI6IjY1OTg2OTk5ODliNTYxMDA5NDhhZGMzYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.pwhIrlGsVm3C03dU2MtOpUDLJCSTdu_amMw5kHkRjgg';\n// const DAY = Date.now();\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// axios.defaults.headers = {\n//   Authorization: BEARER,\n//   Accept: 'aplication/json',\n// };\n\nexport const getTrending = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=8c1d02b978dbff183fcda89eac0b3f2e'\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8c1d02b978dbff183fcda89eac0b3f2e&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getMovie = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","getCastData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","getCast","sent","t0","console","error","message","stop","apply","arguments","_jsx","children","map","_ref2","id","name","profile_path","character","imgSrc","concat","_jsxs","src","alt","width","getTrending","response","axios","abrupt","data","results","getMovieDetails","_callee2","_context2","_x","_ref3","_callee3","_context3","_x2","getReviews","_ref4","_callee4","_context4","_x3","getMovie","_ref5","_callee5","query","_context5","_x4"],"sourceRoot":""}