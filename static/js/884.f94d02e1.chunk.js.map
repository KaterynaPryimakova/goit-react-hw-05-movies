{"version":3,"file":"static/js/884.f94d02e1.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","service/api.js"],"sourcesContent":["import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'service/api';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinckLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n\n  const [posterPath, setPosterPath] = useState('');\n  const [title, setTitle] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [voteAverage, setVoteAverage] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState('');\n\n  useEffect(() => {\n    const getMovieData = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n\n        if (!movieData) return;\n\n        const {\n          poster_path,\n          title,\n          release_date,\n          vote_average,\n          overview,\n          genres,\n        } = movieData;\n\n        const imgSrc = `https://image.tmdb.org/t/p/w300${poster_path}`;\n        const votePercent = Math.floor(vote_average * 10);\n        const releaseYear = release_date.split('-')[0];\n        const genresNames = genres.map(genre => genre.name).join(' ');\n\n        setPosterPath(imgSrc);\n        setTitle(title);\n        setReleaseDate(releaseYear);\n        setVoteAverage(votePercent);\n        setOverview(overview);\n        setGenres(genresNames);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    getMovieData();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinckLocationRef.current}>Go back</Link>\n\n      <section>\n        <img src={posterPath} alt={title} />\n        <h1>\n          {title}({releaseDate})\n        </h1>\n        <p>User score: {voteAverage}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <p>{genres}</p>\n      </section>\n\n      <section>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: location }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </section>\n\n      <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n// 8c1d02b978dbff183fcda89eac0b3f2e\n// https://api.themoviedb.org /3/trending/movie/ {time_window}\n// const API_KEY = '8c1d02b978dbff183fcda89eac0b3f2e';\n// const BEARER =\n//   'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4YzFkMDJiOTc4ZGJmZjE4M2ZjZGE4OWVhYzBiM2YyZSIsInN1YiI6IjY1OTg2OTk5ODliNTYxMDA5NDhhZGMzYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.pwhIrlGsVm3C03dU2MtOpUDLJCSTdu_amMw5kHkRjgg';\n// const DAY = Date.now();\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// axios.defaults.headers = {\n//   Authorization: BEARER,\n//   Accept: 'aplication/json',\n// };\n\nexport const getTrending = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=8c1d02b978dbff183fcda89eac0b3f2e'\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8c1d02b978dbff183fcda89eac0b3f2e&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getMovie = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n"],"names":["_location$state$from","_location$state","location","useLocation","backLinckLocationRef","useRef","state","from","movieId","useParams","_useState","useState","_useState2","_slicedToArray","posterPath","setPosterPath","_useState3","_useState4","title","setTitle","_useState5","_useState6","releaseDate","setReleaseDate","_useState7","_useState8","voteAverage","setVoteAverage","_useState9","_useState10","overview","setOverview","_useState11","_useState12","genres","setGenres","useEffect","getMovieData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","poster_path","_title","release_date","vote_average","_overview","_genres","imgSrc","votePercent","releaseYear","genresNames","_context","prev","next","getMovieDetails","sent","abrupt","concat","Math","floor","split","map","genre","name","join","t0","console","error","message","stop","apply","arguments","_jsxs","children","_jsx","Link","to","current","src","alt","Suspense","fallback","Outlet","getTrending","response","axios","data","results","_ref2","_callee2","_context2","_x","getCast","_ref3","_callee3","_context3","cast","_x2","getReviews","_ref4","_callee4","_context4","_x3","getMovie","_ref5","_callee5","query","_context5","_x4"],"sourceRoot":""}