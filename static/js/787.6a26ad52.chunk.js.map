{"version":3,"file":"static/js/787.6a26ad52.chunk.js","mappings":"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","sources":["components/AdditionalInfo/AdditionalInfo.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","service/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const AdditionalInfo = () => {\n  const location = useLocation();\n\n  return (\n    <section>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: location }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </section>\n  );\n};\n","export const MovieInfo = ({\n  posterPath,\n  title,\n  releaseDate,\n  voteAverage,\n  overview,\n  genres,\n}) => {\n  return (\n    <section>\n      <div>\n        <img src={posterPath} alt={title} width=\"300\" />\n      </div>\n      <h1>\n        {title}({releaseDate})\n      </h1>\n      <p>User score: {voteAverage}%</p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h2>Genres</h2>\n      <p>{genres}</p>\n    </section>\n  );\n};\n","import { AdditionalInfo } from 'components/AdditionalInfo/AdditionalInfo';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'service/api';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinckLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n\n  const [posterPath, setPosterPath] = useState('');\n  const [title, setTitle] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [voteAverage, setVoteAverage] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState('');\n\n  useEffect(() => {\n    const getMovieData = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n\n        const defaultImg =\n          '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n\n        const imgSrc = movieData.poster_path\n          ? `https://image.tmdb.org/t/p/w300${movieData.poster_path}`\n          : defaultImg;\n\n        const { title, release_date, vote_average, overview, genres } =\n          movieData;\n\n        const votePercent = Math.floor(vote_average * 10);\n        const releaseYear = release_date.split('-')[0];\n        const genresNames = genres.map(genre => genre.name).join(' ');\n\n        setPosterPath(imgSrc);\n        setTitle(title);\n        setReleaseDate(releaseYear);\n        setVoteAverage(votePercent);\n        setOverview(overview);\n        setGenres(genresNames);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    getMovieData();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinckLocationRef.current}>Go back</Link>\n\n      <MovieInfo\n        posterPath={posterPath}\n        title={title}\n        releaseDate={releaseDate}\n        voteAverage={voteAverage}\n        overview={overview}\n        genres={genres}\n      />\n\n      <AdditionalInfo />\n\n      <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n// 8c1d02b978dbff183fcda89eac0b3f2e\n// https://api.themoviedb.org /3/trending/movie/ {time_window}\n// const API_KEY = '8c1d02b978dbff183fcda89eac0b3f2e';\n// const BEARER =\n//   'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4YzFkMDJiOTc4ZGJmZjE4M2ZjZGE4OWVhYzBiM2YyZSIsInN1YiI6IjY1OTg2OTk5ODliNTYxMDA5NDhhZGMzYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.pwhIrlGsVm3C03dU2MtOpUDLJCSTdu_amMw5kHkRjgg';\n// const DAY = Date.now();\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// axios.defaults.headers = {\n//   Authorization: BEARER,\n//   Accept: 'aplication/json',\n// };\n\nexport const getTrending = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=8c1d02b978dbff183fcda89eac0b3f2e'\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8c1d02b978dbff183fcda89eac0b3f2e&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getMovie = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n"],"names":["AdditionalInfo","location","useLocation","_jsxs","children","_jsx","Link","to","state","from","MovieInfo","_ref","posterPath","title","releaseDate","voteAverage","overview","genres","src","alt","width","_location$state$from","_location$state","backLinckLocationRef","useRef","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setPosterPath","_useState3","_useState4","setTitle","_useState5","_useState6","setReleaseDate","_useState7","_useState8","setVoteAverage","_useState9","_useState10","setOverview","_useState11","_useState12","setGenres","useEffect","getMovieData","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","imgSrc","_title","release_date","vote_average","_overview","_genres","votePercent","releaseYear","genresNames","_context","prev","next","getMovieDetails","sent","poster_path","concat","Math","floor","split","map","genre","name","join","t0","console","error","message","stop","apply","arguments","current","Suspense","fallback","Outlet","getTrending","response","axios","abrupt","data","results","_ref2","_callee2","_context2","_x","getCast","_ref3","_callee3","_context3","cast","_x2","getReviews","_ref4","_callee4","_context4","_x3","getMovie","_ref5","_callee5","query","_context5","_x4"],"sourceRoot":""}