{"version":3,"file":"static/js/134.80dea6f8.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","pages/Movies.jsx","service/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nexport const MoviesList = ({ getDataMovie }) => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const movies = await getDataMovie();\n        setMovies(movies);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error.message);\n      }\n    };\n    fetchMovies();\n  }, [getDataMovie]);\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { getMovie } from 'service/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    if (form.elements.query.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter the name of the movie\"\n          name=\"query\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList getDataMovie={() => getMovie(query)} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n// 8c1d02b978dbff183fcda89eac0b3f2e\n// https://api.themoviedb.org /3/trending/movie/ {time_window}\n// const API_KEY = '8c1d02b978dbff183fcda89eac0b3f2e';\n// const BEARER =\n//   'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4YzFkMDJiOTc4ZGJmZjE4M2ZjZGE4OWVhYzBiM2YyZSIsInN1YiI6IjY1OTg2OTk5ODliNTYxMDA5NDhhZGMzYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.pwhIrlGsVm3C03dU2MtOpUDLJCSTdu_amMw5kHkRjgg';\n// const DAY = Date.now();\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// axios.defaults.headers = {\n//   Authorization: BEARER,\n//   Accept: 'aplication/json',\n// };\n\nexport const getTrending = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=8c1d02b978dbff183fcda89eac0b3f2e'\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8c1d02b978dbff183fcda89eac0b3f2e&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const getMovie = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=8c1d02b978dbff183fcda89eac0b3f2e`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n"],"names":["MoviesList","_ref","getDataMovie","location","useLocation","_useState","useState","_useState2","_slicedToArray","movies","setMovies","useEffect","fetchMovies","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_movies","_context","prev","next","sent","t0","console","error","message","stop","apply","arguments","_jsx","children","map","_ref3","id","title","Link","to","concat","state","from","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","_jsxs","_Fragment","onSubmit","evt","preventDefault","form","currentTarget","elements","value","reset","type","placeholder","name","getMovie","getTrending","response","axios","abrupt","data","results","getMovieDetails","_callee2","movieId","_context2","_x","getCast","_callee3","_context3","cast","_x2","getReviews","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}